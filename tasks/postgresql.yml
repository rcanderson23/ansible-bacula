---
- name: Initialize postgresql db
  command: /usr/bin/postgresql-setup initdb
  args:
    creates: /var/lib/pgsql/data/postgresql.conf
  tags:
    - db

- name: copy config files for postgresql
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: postgres
    group: postgres
    mode: 0600
  with_items:
    - { src: 'pg_hba.conf.j2', dest: '/var/lib/pgsql/data/pg_hba.conf' }
    - { src: 'pg_ident.conf.j2', dest: '/var/lib/pgsql/data/ident.conf' }
    - { src: 'postgresql.conf.j2', dest: '/var/lib/pgsql/data/postgresql.conf' }
  tags:
    - db
  notify:
    - restart postgresql

- name: Start postgresql
  service:
    name: postgresql
    state: started
    enabled: yes
  tags:
    - db

- name: Create bacula db
  become_user: postgres
  postgresql_db:
    name: "{{ db_name }}"
    encoding: SQL_ASCII
    lc_collate: C
    lc_ctype: C
    template: template0
    state: present 
  tags:
    - db

- name: Create bacula user
  become_user: postgres
  postgresql_user:
    name: "{{ db_user }}"
    password: "{{ db_user_password }}"
    state: present
  tags:
    - db

- name: check if tables are added to bacula db
  become_user: postgres
  shell: "psql -d {{ db_name }} -c \"SELECT table_schema || '.' || table_name FROM information_schema.tables WHERE table_type = 'BASE TABLE' AND table_schema NOT IN ('pg_catalog', 'information_schema');\" | grep public.job"
  register: tables
  ignore_errors: yes
  changed_when: False
  tags:
    - db

- name: create bacula db tables
  become_user: postgres
  shell: /usr/libexec/bacula/make_postgresql_tables 
  when: tables.rc != 0
  tags:
    - db

- name: Give bacula user db privileges
  become_user: postgres
  postgresql_privs:
    db: "{{ db_name }}"
    role: "{{ db_user }}"
    objs: ALL_IN_SCHEMA 
    privs: SELECT,INSERT,UPDATE,DELETE
    type: table
  tags:
    - db

- name: Give bacula user db privileges
  become_user: postgres
  postgresql_privs:
    db: "{{ db_name }}"
    role: "{{ db_user }}"
    objs: ALL_IN_SCHEMA 
    privs: SELECT,UPDATE
    type: sequence
  tags:
    - db
